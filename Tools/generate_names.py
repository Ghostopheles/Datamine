import os

from dm_tools import ITEM_DB2, Item

MAX_THREADS = os.cpu_count()
UPDATE_ALL = False

parent_directory = os.path.dirname(os.getcwd())
ADDON_DIR = os.path.join(parent_directory, "Datamine_Names")
OUTPUT_DIR = os.path.join(ADDON_DIR, "Generated")

TOC_FILE_LIST_LINE_NO = 17

os.makedirs(OUTPUT_DIR, exist_ok=True)

LUA_FORMAT = """-- This file was generated by generate_names.py

local _, Datamine_Names = ...;

Datamine_Names["{name}"] = {{
{data}
}};
"""


def tabs(depth: int):
    return "\t" * depth


def add_files_to_toc():
    toc_path = os.path.join(ADDON_DIR, "Datamine_Names.toc")
    with open(toc_path, "r") as f:
        toc_lines = f.readlines()

    with open(toc_path, "w") as f:
        f.truncate()
        f.writelines(toc_lines[:TOC_FILE_LIST_LINE_NO])

        for file in os.listdir(OUTPUT_DIR):
            if file.endswith(".lua"):
                f.write(f"Generated/{file}\n")
            else:
                os.remove(os.path.join(OUTPUT_DIR, file))


def lua_format(name: str, data: str):
    return LUA_FORMAT.format(name=name, data=data)


def write_items_file():
    items_data = ""
    for item in ITEM_DB2.read():
        item: Item
        name = item.Display_lang.replace('"', '\\"')
        items_data += f'\n{tabs(1)}[{item.ID}] = "{name}",'

    items_data = items_data[1:]

    output_file = os.path.join(OUTPUT_DIR, f"Items.lua")
    with open(output_file, "w") as f:
        f.write(lua_format(name="Items", data=items_data))


write_items_file()
add_files_to_toc()
