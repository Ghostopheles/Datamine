import os
import concurrent.futures

from dm_tools import ITEMBONUS_DB2, ItemBonus, get_latest_game_version

MAX_THREADS = os.cpu_count()
UPDATE_ALL = False

parent_directory = os.path.dirname(os.getcwd())
ADDON_DIR = os.path.join(parent_directory, "Datamine_Static")
OUTPUT_DIR = os.path.join(ADDON_DIR, "Generated")

WOW_DIR = "F:/Games/World of Warcraft"
FLAVOR = "wow"

TOC_FILE_LIST_LINE_NO = 17

os.makedirs(OUTPUT_DIR, exist_ok=True)

LUA_FORMAT = """-- This file was generated by generate_item_bonuses.py
-- Version: {version}

local _, Datamine_Static = ...;

Datamine_Static.ItemBonus = {{
{itemBonusData}
}};
"""


def tabs(depth: int):
    return "\t" * depth


_TABS = {1: tabs(1), 2: tabs(2), 3: tabs(3)}


def add_files_to_toc():
    toc_path = os.path.join(ADDON_DIR, "Datamine_Static.toc")
    with open(toc_path, "r") as f:
        toc_lines = f.readlines()

    with open(toc_path, "w") as f:
        f.truncate()
        f.writelines(toc_lines[:TOC_FILE_LIST_LINE_NO])

        for file in os.listdir(OUTPUT_DIR):
            if file.endswith(".lua"):
                f.write(f"Generated/{file}\n")
            else:
                os.remove(os.path.join(OUTPUT_DIR, file))


def lua_format(itemBonusData: str):
    version = get_latest_game_version()
    return LUA_FORMAT.format(version=version, itemBonusData=itemBonusData)


def format_item_bonuses(bonuses: list[ItemBonus]):
    all_bonuses = ""

    first_line = True
    for itemBonus in bonuses:
        bonus_tbl = f"{_TABS[1]}[{itemBonus.ID}] = {{"

        if not first_line:
            bonus_tbl = "\n" + bonus_tbl
        else:
            first_line = False

        bonus_tbl += f"\n{_TABS[2]}ID = {itemBonus.ID},"

        bonus_tbl += f"\n{_TABS[2]}Values = {{"
        bonus_tbl += f"\n{_TABS[3]}[0] = {itemBonus.Value_0},"
        bonus_tbl += f"\n{_TABS[3]}[1] = {itemBonus.Value_1},"
        bonus_tbl += f"\n{_TABS[3]}[2] = {itemBonus.Value_2},"
        bonus_tbl += f"\n{_TABS[3]}[3] = {itemBonus.Value_3},"
        bonus_tbl += f"\n{_TABS[2]}" + "},"

        bonus_tbl += (
            f"\n{_TABS[2]}"
            + f"ParentItemBonusListID = {itemBonus.ParentItemBonusListID},"
        )
        bonus_tbl += f"\n{_TABS[2]}" + f"Type = {itemBonus.Type},"
        bonus_tbl += f"\n{_TABS[2]}" + f"OrderIndex = {itemBonus.OrderIndex}"

        bonus_tbl += f"\n{_TABS[1]}" + "},"

        all_bonuses += bonus_tbl

    return all_bonuses


def write_file():
    bonuses = [bonus for bonus in ITEMBONUS_DB2.read()]
    data = format_item_bonuses(bonuses)

    output_file = os.path.join(OUTPUT_DIR, f"ItemBonus.lua")
    with open(output_file, "w") as f:
        f.write(lua_format(itemBonusData=data))


write_file()
add_files_to_toc()
